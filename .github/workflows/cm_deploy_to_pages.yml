name: Deploy Critical Moments config to Github Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Generate Localized Configs
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const config = JSON.parse(fs.readFileSync('config.json', 'utf8'));
            const localizations = {
              "en": {
                "logMealNotification_title": "Don't forget to log your meals",
                "logMealNotification_body": "It's important to stay on track!",
                "keepStreakNotification_title": "ðŸ”¥ Keep the streak going!",
                "keepStreakNotification_body": "You're doing great! Keep it up!"
              },
              "es": {
                "logMealNotification_title": "No olvides registrar tus comidas",
                "logMealNotification_body": "Â¡Es importante mantenerse en el camino!",
                "keepStreakNotification_title": "ðŸ”¥ Â¡Sigue con la racha!",
                "keepStreakNotification_body": "Â¡Lo estÃ¡s haciendo genial! Â¡Sigue asÃ­!"
              }
            };

            Object.keys(localizations).forEach(lang => {
              const localizedConfig = JSON.parse(JSON.stringify(config));
              Object.keys(localizedConfig.notifications).forEach(notificationKey => {
                localizedConfig.notifications[notificationKey].title = localizations[lang][`${notificationKey}_title`];
                localizedConfig.notifications[notificationKey].body = localizations[lang][`${notificationKey}_body`];
              });
              fs.writeFileSync(`./public/cmConfigSigned-${lang}.cmconfig`, JSON.stringify(localizedConfig, null, 2));
            });
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
